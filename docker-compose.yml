version: '3.8'

services:
  api:
    build:
      context: ${API_CONTEXT:-https://github.com/senshiben-efrei/questify.git#main:api}
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: questify_api
    restart: always
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./api/src:/app/src:delegated
      - api_logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-questify}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES:-60}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - questify_network

  client:
    build:
      context: ${CLIENT_CONTEXT:-https://github.com/senshiben-efrei/questify.git#main:client}
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: questify_client
    restart: always
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    volumes:
      - ./client/src:/app/src:delegated
      - ./client/public:/app/public:delegated
      - client_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=${API_URL:-http://${HOST_IP:-localhost}:8000}
      - WATCHPACK_POLLING=true
      - REACT_APP_BUILD_MODE=${BUILD_MODE:-production}
    depends_on:
      - api
    networks:
      - questify_network

  db:
    image: postgres:15-alpine
    container_name: questify_db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-questify}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - questify_network

volumes:
  postgres_data:
    name: ${POSTGRES_DATA_VOLUME:-questify_postgres_data}
  api_logs:
    name: questify_api_logs
  client_node_modules:
    name: questify_client_node_modules

networks:
  questify_network:
    name: ${NETWORK_NAME:-questify_network}
    driver: bridge